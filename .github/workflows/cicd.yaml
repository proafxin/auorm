name: Build, Test and Publish

permissions: read-all

on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]


env:
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  MYSQL_USER: ${{ vars.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
  MYSQL_PORT: ${{ vars.MYSQL_PORT }}
  POSTGRESQL_HOST: ${{ vars.POSTGRESQL_HOST }}
  POSTGRESQL_USER: ${{ vars.POSTGRESQL_USER }}
  POSTGRESQL_PASSWORD: ${{ vars.POSTGRESQL_PASSWORD }}
  POSTGRESQL_PORT: ${{ vars.POSTGRESQL_PORT }}
  SQLSERVER_HOST: ${{ vars.SQLSERVER_HOST }}
  SQLSERVER_USER: ${{ vars.SQLSERVER_USER }}
  SQLSERVER_PASSWORD: ${{ vars.SQLSERVER_PASSWORD }}
  SQLSERVER_PORT: ${{ vars.SQLSERVER_PORT }}
  MONGO_HOST: ${{ vars.MONGO_HOST }}
  MONGO_USER: ${{ vars.MONGO_USER }}
  MONGO_PASSWORD: ${{ vars.MONGO_PASSWORD }}
  MONGO_PORT: ${{ vars.MONGO_PORT }}
  MYSQL_DBNAME: ${{vars.MYSQL_DBNAME }}

jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "0.4.17"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - uses: adambirds/docker-compose-action@main
        with:
          compose-file: compose.yml

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Run Tox
        run: |
          uv tool install tox --with tox-uv
          uv sync --all-extras --dev
          tox -p
