services:
  mysql:
    container_name: mysql
    image: mysql:latest
    restart: always
    # docker container run -d -i -p 3306:3306 -e MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD --name mysql mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DBNAME}
      - MYSQL_TCP_PORT=${MYSQL_PORT}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    healthcheck:
      test: mysqladmin ping -h "$$MYSQL_HOST"
      timeout: 10s
      retries: 2

  postgres:
    container_name: postgresql
    # docker container run -i -d -p 5432:5432 -e POSTGRES_PASSWORD=$POSTGRESQL_PASSWORD  postgres
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - PGUSER=${POSTGRESQL_USER}
      - POSTGRES_DB=${MYSQL_DBNAME}
    ports:
      - ${POSTGRESQL_PORT}:${POSTGRESQL_PORT}
    healthcheck:
      test: pg_isready -U "$$POSTGRESQL_USER" -p "$$POSTGRESQL_PORT"
      interval: 5s
      timeout: 5s
      retries: 2
    # networks:
    #   - host

  sqlserver:
    container_name: sqlserver
    # docker container run -d -i -p 1433:1433 -e SA_PASSWORD=$SQLSERVER_PASSWORD -e ACCEPT_EULA=Y --name sqlserver mcr.microsoft.com/mssql/server:latest
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      - SA_PASSWORD=${SQLSERVER_PASSWORD}
      - ACCEPT_EULA=Y
    healthcheck:
      test: timeout 1 bash -c 'cat < /dev/null > /dev/tcp/127.0.0.1/1433'
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
    # networks:
    #   - host
    ports:
      - ${SQLSERVER_PORT}:${SQLSERVER_PORT}
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}

  # scylla-node1:
  #   container_name: scylla-node1
  #   image: scylladb/scylla:5.2.0
  #   restart: always
  #   command: --seeds=scylla-node1,scylla-node2 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
  #   volumes:
  #     - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
  #     - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
  #     - "./scylla/mutant-data.txt:/mutant-data.txt"

  # scylla-node2:
  #   container_name: scylla-node2
  #   image: scylladb/scylla:5.2.0
  #   restart: always
  #   command: --seeds=scylla-node1,scylla-node2 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
  #   volumes:
  #     - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
  #     - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"

  # scylla-node3:
  #   container_name: scylla-node3
  #   image: scylladb/scylla:5.2.0
  #   restart: always
  #   command: --seeds=scylla-node1,scylla-node2 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
  #   volumes:
  #     - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
  #     - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
